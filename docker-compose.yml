version: '3.8'

networks:
  public_network:
    driver: bridge
  internal_network:
    driver: bridge
    internal: true


services:
  chatbotweb:
    build:
      context: ./frontend/chatbotweb
      dockerfile: Dockerfile
    ports:
      - "1111:80"
    networks:
      - public_network
      - internal_network
    depends_on:
      - chatapi
    environment:
      - REACT_APP_API_URL=http://chatapi:1002
      - REACT_APP_WS_URL=chatapi:1002
      - REACT_APP_ENVIRONMENT=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
      
  chatapi:
    build:
      context: ./backend/ChatAPI
      dockerfile: Dockerfile
    ports:
      - "1002:1002"
    networks:
      - public_network
      - internal_network
    environment:
      - ENVIRONMENT=production
      - DB_CLICKNET_HOST=mysql-chatbot
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - PYTHONPATH=/app
      - DB_CHATBOT_USER=chatbot_user
      - DB_CHATBOT_PASSWORD=chatbot_password
      - DB_CHATBOT_NAME=chatbot_db
    depends_on:
      mysql-chatbot:
        condition: service_healthy
      kafka:
        condition: service_started
    volumes:
      - ./backend:/app/backend
      - ./logs:/app/logs
        
  chatauth:
    build:
      context: ./backend/ChatAuth
      dockerfile: Dockerfile
    ports:
      - "1001:1001"
    networks:
      - public_network
      - internal_network
    environment:
      - ENVIRONMENT=production
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app/backend
      - ./logs:/app/logs  
      
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - internal_network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    networks:
      - internal_network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  mysql-chatbot:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: chatbot_db
      MYSQL_USER: chatbot_user
      MYSQL_PASSWORD: chatbot_password
    ports:
      - "4306:3306"
    networks:
      - internal_network
    volumes:
      - mysql-chatbot-data:/var/lib/mysql
      - ./database/chatbot:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

volumes:
  mysql-chatbot-data:
